services:
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: devops
      POSTGRES_PASSWORD: devops
      POSTGRES_DB: tododb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  backend:
    build: ./backend
    restart: always
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: tododb
      DB_USER: devops
      DB_PASSWORD: devops
    ports:
      - "4000:4000"
    command: ["node", "src/index.js"]

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    # NO necesita volumes ni command
    # porque ya sirves con NGINX

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    depends_on:
      - prometheus
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: always
  artifactory:
    image: releases-docker.jfrog.io/jfrog/artifactory-oss:latest
    container_name: artifactory
    ports:
      - "8082:8082"   # Interfaz web
      - "8081:8081"   # API
    volumes:
      - artifactory_data:/var/opt/jfrog/artifactory
    restart: always


volumes:
  pgdata:
  artifactory_data:
